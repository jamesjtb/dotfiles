# Path to Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

zstyle ':omz:update' mode reminder  # just remind me to update when it's time

zstyle ':omz:update' frequency 7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

plugins=(git nvm)

source $ZSH/oh-my-zsh.sh

# Set up node if it doesn't exist
if ! command -v node &> /dev/null; then
    echo "node command not found - installing latest LTS version"
    nvm install --lts
fi

# Set up bat if it doesn't exist
if ! (command -v bat &> /dev/null || command -v batcat &> /dev/null); then
    echo "bat command not found - installing from apt"
    sudo apt install bat -y
fi

# set up tpm, you know the rest
if [ ! -d ~/.tmux/plugins/tpm ]; then
    echo "tpm not found - cloning into tmux plugins"
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

# Set up pure theme
ZSH_THEME=""
local pure_path=$HOME/.zsh/pure

if [ ! -d $pure_path ]; then
    git clone https://github.com/sindresorhus/pure.git $pure_path
fi

fpath+=($pure_path)

autoload -U promptinit; promptinit
prompt pure

zstyle ':prompt:pure:git:stash' show yes

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
alias zshreload="source ~/.zshrc && source $ZSH/oh-my-zsh.sh"
alias vim="nvim"
alias zshconfig="nvim ~/.zshrc && zshreload"
alias ohmyzsh="nvim $ZSH/oh-my-zsh.sh"
alias lg="lazygit"
alias fd="fdfind"
alias bat="batcat"

export PATH="$HOME/.scripts:$PATH"
bindkey -s ^f "tmux-sessionizer\n"


# Set up fzf

if [ ! -d "$HOME/.fzf" ]; then
    echo "fzf is not present - installing..."
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install --all
fi

export PATH="$HOME/.fzf/bin:$PATH" # add fzf to path early so it's available to be sourced from on the next line
source <(fzf --zsh)

# fuzzy cd
fcd() {
    local dir
    dir=$(fd -H --type d | fzf)
    if [ -n "$dir" ]; then
        cd "$dir"
    fi
}

# set up neovim
export PATH="$HOME/neovim/bin:$PATH"

# Auto-load all executable files in ~/.zshrc-modules
module_dir="${ZDOTDIR:-$HOME}/.zshrc-modules"
if [[ -d $module_dir ]]; then
  for module in "$module_dir"/*; do
    [[ -f $module && -r $module ]] || continue
    source "$module"
  done
fi

# Install tmux if we don't have it
if ! command -v tmux &> /dev/null; then
    echo "tmux does not seem to be installed. Installing..."
    apt install tmux
fi

# Load tmux if this is an interactive shell
if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  echo "launching tmux"
  exec tmux
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fpath+=${ZDOTDIR:-~}/.zsh_functions
